name: CI (Linux, MSRV)

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - master

jobs:
  build_and_test:
    strategy:
      fail-fast: false
      matrix:
        version:
          - 1.42.0

    name: ${{ matrix.version }} - x86_64-unknown-linux-gnu
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis:5.0.7
        ports:
          - 6379:6379
        options: --entrypoint redis-server

      redis-cluster:
        image: grokzen/redis-cluster:5.0.7
        ports:
          - 7000:7000
          - 7001:7001
          - 7002:7002
          - 7003:7003
          - 7004:7004
          - 7005:7005

    steps:
      - uses: actions/checkout@master

      - name: Install Redis CLI
        run: |
            brew install redis

      - name: Configure Redis
        run: |
          for port in {7000..7005}; do
            redis-cli -p "$port" CONFIG SET cluster-node-timeout 1000
          done

      - name: Install ${{ matrix.version }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.version }}-x86_64-unknown-linux-gnu
          profile: minimal
          override: true

      - name: tests (1.40.0)
        if: matrix.version == '1.40.0'
        uses: actions-rs/cargo@v1
        timeout-minutes: 40
        with:
          command: test
          args: --package=actix-cors
                --package=actix-identity
                --package=actix-redis
                --package=actix-session
                --package=actix-web-httpauth
                --all-features --no-fail-fast -- --nocapture

      - name: tests (1.42.0)
        if: matrix.version == '1.42.0'
        uses: actions-rs/cargo@v1
        timeout-minutes: 40
        with:
          command: test
          args: --package=actix-protobuf
                --all-features --no-fail-fast -- --nocapture
